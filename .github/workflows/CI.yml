# This GitHub Actions workflow fetches and merges blocklists on a schedule
# using the `generate-domains-blocklist.py` from the official dnscrypt-proxy repository.

name: Update Blocklist

on:
  schedule:
    # Runs at 0:00 UTC every day (8:00 AM SGT)
    - cron: '0 0 * * *'
  workflow_dispatch: {}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Checkout dnscrypt-proxy tools
        uses: actions/checkout@v4
        with:
          repository: 'DNSCrypt/dnscrypt-proxy'
          path: 'dnscrypt-proxy'

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # If your script requires extra libraries, install them here

      - name: Generate merged blocklist
        run: |
          # Ensure domains-blocklist.conf, allowlist and time-restricted files are in the repo root
          python dnscrypt-proxy/utils/generate-domains-blocklist/generate-domains-blocklist.py \
            --config domains-blocklist.conf \
            --time-restricted domains-time-restricted.txt \
            --allowlist domains-allowlist.txt \
            --output-file blocklist.txt

      - name: Prepare publish directory
        run: |
          mkdir -p publish
          cp merged-blocklist.txt publish/

      - name: Git push assets to release branch
        run: |
          cd publish
          git init
          git config --local user.name "github-actions[bot]"
          git config --local user.email "${{ github.actor }}@users.noreply.github.com"
          git checkout -b release
          git add .
          git commit -m "${{ env.RELEASE_NAME }}"
          git remote add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git push -f -u origin release

      - name: Purge jsDelivr CDN
        run: |
          cd publish
          for file in *; do
            curl -i "https://purge.jsdelivr.net/gh/${{ github.repository }}@release/${file}"
          done
